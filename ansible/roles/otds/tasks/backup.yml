---
# tasks file for backup otds

    # test if backupdir is present and fail (or drop/clear it)
    - name: "test previous backup dir {{ otds_reinstall_backup_dir }}"
      stat:
        path: "{{ otds_reinstall_backup_dir }}"
      register: old_backup_dirs

    - name: print old_backup_dirs
      debug:
        var: old_backup_dirs

    - name: fail if previous backup dir not empty and (not drop_previous_backup_dir)
      fail:
        msg: "Backup dir {{ otds_reinstall_backup_dir }} is present"
      when: old_backup_dirs.stat.exists and not drop_previous_backup_dir

    - name: "drop previous  {{ otds_reinstall_backup_dir }} dir"
      file:
        path: "{{ otds_reinstall_backup_dir }}"
        state: absent

    # if there is previous OTDS - export LDAP (if otds_reimport_ldap = true)
    - name: make export old LDAP database
      block:
      - name: "drop previous {{ otds_import_tmp_dir }} dir"
        file:
          path: "{{ otds_import_tmp_dir }}"
          state: absent

      - name: "make {{ otds_import_tmp_dir }} dir"
        file:
          path: "{{ otds_import_tmp_dir }}"
          owner: "{{ otds_user }}"
          group: "{{ otds_group }}"
          state: directory

      - name: "export ldif from previous installation to {{ otds_import_tmp_dir }}"
        command: "{{ otds_dir }}/opendj/bin/export-ldif -h localhost -p 4440 -D \"cn=Directory Manager\" --ldifFile {{ otds_import_tmp_dir }}/otds-16.ldif  --backendID userRoot --appendToLDIF   --bindPassword {{ otds_admin_old_passwd }} --trustAll --noPropertiesFile"
        when: otds_reimport_ldap

      - name: copy config.ldif from {{ otds_dir }}/opendj/config/ to {{ otds_import_tmp_dir }}
        copy:
          src: "{{ otds_dir }}/opendj/config/config.ldif"
          dest: "{{ otds_import_tmp_dir }}/config.ldif"
          remote_src: yes
      when: otds_reimport_ldap

    # - name: "drop previous backup dir"
    #   file:
    #     path: "{{ otds_reinstall_backup_dir }}"
    #     state: absent

    # test if present previous otds instalation dirs and backup them
    - name: "test previous otds_dirs"
      stat:
        path: "{{ item }}"
      loop: [ "{{ otds_dir }}","{{ otds_installer_path }}", "{{ tomcat_dir }}/conf/Catalina/localhost", /etc/opentext ]
      register: backup_dirs

    - name: "make backup dir"
      file:
        path: "{{ otds_reinstall_backup_dir }}"
        owner: "{{ otds_user }}"
        group: "{{ otds_group }}"
        state: directory

    - name: Backuping previous instalation into {{ otds_reinstall_backup_dir }}
      command: "mv {{ item.path }} {{ otds_reinstall_backup_dir }}"
      when: item.present
      loop: "{{backup_dirs|json_query('results[*].{path:item, present:stat.exists}')}}"
      # with_items: "{{backup_dirs|json_query('results[*].item')}}"

    # - name: "make otds_installer_path"
    #   file:
    #     path: "{{ otds_installer_path }}"
    #     owner: "{{ otds_user }}"
    #     group: "{{ otds_group }}"
    #     state: directory

    # restart OTDS (tomcat) to release LDAP ports
    - name: restart {{ otds_service }}
      service:
        name: "{{ otds_service }}"
        state: restarted
        enabled: yes