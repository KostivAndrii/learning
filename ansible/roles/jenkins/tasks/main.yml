---
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Create custom init scripts directory.
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775

- name: Configure default users
  template:
    src: basic-security.groovy
    dest: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775

- name: coping Maven config file
  copy:
    src: "hudson.tasks.Maven.xml"
    dest: "{{ jenkins_home }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0644

- name: Ensure jenkins_home/jobs {{ jenkins_home }}/jobs exists
  file:
    path: "{{ jenkins_home }}/jobs/"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755

- name: Unarchive jenkins job
  unarchive:
    src: mhw.tgz
    dest: /var/lib/jenkins/jobs/

- name: enable jenkins
  systemd:
    name: jenkins
    enabled: true

- name: start jenkins
  service:
    name: jenkins
    state: started
    enabled: yes

# - name: Ensure port is open
#   wait_for:
#     host: 0.0.0.0
#     port: 8080
#     state: started

- name: "wait for HTTP 200 accessibility http://localhost:8080 - first time for apply user init"
  uri:
    url: http://localhost:8080/login?from=%2F
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 10

- name: restart jenkins
  service:
    name:  jenkins
    state: restarted

- name: "wait for HTTP 200 accessibility http://localhost:8080"
  uri:
    url: http://localhost:8080/login?from=%2F
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 10

- name: Remove Jenkins security init scripts after first startup.
  file:
    path: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    state: absent

- name: disable setup wizard
  jenkins_script:
    script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()
      }
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"

- name: Install Jenkins plugins using password.
  jenkins_plugin:
    name: "{{ item }}"
    jenkins_home: "{{ jenkins_home }}"
    url_username: "{{ jenkins_admin_username }}"
    url_password: "{{ jenkins_admin_password }}"
#    state: present
#    timeout: 30
#    updates_expiration: 86400
#    updates_url: "{{ jenkins_updates_url }}"
#    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
    with_dependencies: true
  with_items: "{{ jenkins_plugins }}"
  notify: restart jenkins
  register: plugin_result
  until: plugin_result is success
  retries: 3
  delay: 2

- name: restart jenkins after disable setup wizard
  service:
    name:  jenkins
    state: restarted

- name: "wait for HTTP 200 accessibility http://localhost:8080"
  uri:
    url: http://localhost:8080/login?from=%2F
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
